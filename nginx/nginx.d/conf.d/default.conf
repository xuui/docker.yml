server {
#    listen 80;
    listen 80 default_server reuseport;
#    listen [::]:80;
    listen [::]:80 default_server ipv6only=on;
    server_name localhost;

    # http 301 to https.
#    return 301 https://$host$request_uri;
    
    # ssl.
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    ssl_certificate /usr/local/nginx/conf/ssl/example.com.crt;
#    ssl_certificate_key /usr/local/nginx/conf/ssl/example.com.key;
#    ssl_session_timeout 5m;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers "TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5";
#    ssl_session_cache builtin:1000 shared:SSL:10m;
#    # openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048
#    ssl_dhparam /usr/local/nginx/conf/ssl/dhparam.pem;

    charset utf-8;
    
    # $remote_addr             客户端地址
    # $remote_user             客户端用户名称
    # $time_local              访问时间和时区
    # $request                 请求的URI和HTTP协议
    # $http_host               请求地址，即浏览器中你输入的地址（IP或域名）
    # $status                  HTTP请求状态
    # $upstream_status         upstream状态
    # $body_bytes_sent         发送给客户端文件内容大小
    # $http_referer            url跳转来源
    # $http_user_agent         用户终端浏览器等信息
    # $ssl_protocol            SSL协议版本
    # $ssl_cipher              交换数据中的算法
    # $upstream_addr           后台upstream的地址，即真正提供服务的主机地址
    # $request_time            整个请求的总时间
    # $upstream_response_time  请求过程中，upstream响应时间
    log_format main '$remote_addr, $remote_user, $time_local, $request, $http_host, $status, $upstream_status, $body_bytes_sent, $http_referer, $http_user_agent, $ssl_protocol, $ssl_cipher, $upstream_addr, $request_time, $upstream_response_time';
    access_log /var/log/nginx/host.access.log  main;
    
    root /var/www/html;
    index index.shtml index.html; 

    #error_page 404 /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ [^/]\.php(/|$) {
    #    try_files $uri =404;
    #    fastcgi_pass 127.0.0.1:9000;
    #    fastcgi_index index.php;
    #    include fastcgi_params;
    #    include fastcgi.conf;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
        expires 30d;
        access_log off;
    }
    location ~ .*\.(js|css)?$ {
        expires 7d;
        access_log off;
    }
    location ~ /.well-known {
        allow all;
    }
    location ~ ^/(LICENSE|README.md) {
        deny all;
    }
    location ~ /\. {
        deny all;
    }
}

